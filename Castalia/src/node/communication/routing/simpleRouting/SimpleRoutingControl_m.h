//
// Generated file, do not edit! Created by nedtool 4.6 from src/node/communication/routing/simpleRouting/SimpleRoutingControl.msg.
//

#ifndef _SIMPLEROUTINGCONTROL_M_H_
#define _SIMPLEROUTINGCONTROL_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "RoutingPacket_m.h"
// }}

/**
 * Enum generated from <tt>src/node/communication/routing/simpleRouting/SimpleRoutingControl.msg:7</tt> by nedtool.
 * <pre>
 * enum SimpleRoutingControl_type
 * {
 * 
 *     SIMPLE_ROUTING_RECEIVERS_REQUEST = 1;
 *     SIMPLE_ROUTING_RECEIVERS_REPLY = 2;
 * }
 * </pre>
 */
enum SimpleRoutingControl_type {
    SIMPLE_ROUTING_RECEIVERS_REQUEST = 1,
    SIMPLE_ROUTING_RECEIVERS_REPLY = 2
};

/**
 * Class generated from <tt>src/node/communication/routing/simpleRouting/SimpleRoutingControl.msg:12</tt> by nedtool.
 * <pre>
 * packet SimpleRoutingControl extends RoutingPacket
 * {
 *     int SimpleRoutingControlKind @enum(SimpleRoutingControl_type);
 * }
 * </pre>
 */
class SimpleRoutingControl : public ::RoutingPacket
{
  protected:
    int SimpleRoutingControlKind_var;

  private:
    void copy(const SimpleRoutingControl& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const SimpleRoutingControl&);

  public:
    SimpleRoutingControl(const char *name=NULL, int kind=0);
    SimpleRoutingControl(const SimpleRoutingControl& other);
    virtual ~SimpleRoutingControl();
    SimpleRoutingControl& operator=(const SimpleRoutingControl& other);
    virtual SimpleRoutingControl *dup() const {return new SimpleRoutingControl(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getSimpleRoutingControlKind() const;
    virtual void setSimpleRoutingControlKind(int SimpleRoutingControlKind);
};

inline void doPacking(cCommBuffer *b, SimpleRoutingControl& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, SimpleRoutingControl& obj) {obj.parsimUnpack(b);}


#endif // ifndef _SIMPLEROUTINGCONTROL_M_H_


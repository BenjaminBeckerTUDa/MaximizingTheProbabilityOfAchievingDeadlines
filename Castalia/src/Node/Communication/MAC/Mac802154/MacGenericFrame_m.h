//
// Generated file, do not edit! Created by opp_msgc 4.0 from src/Node/Communication/MAC/Mac802154/MacGenericFrame.msg.
//

#ifndef _MACGENERICFRAME_M_H_
#define _MACGENERICFRAME_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0400
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Enum generated from <tt>src/Node/Communication/MAC/Mac802154/MacGenericFrame.msg</tt> by opp_msgc.
 * <pre>
 * enum MAC_ProtocolFrameType
 * {
 * 
 *     MAC_PROTO_DATA_FRAME = 2102;
 *     MAC_PROTO_BEACON_FRAME = 2103;
 *     MAC_PROTO_ACK_FRAME = 2104;
 * 
 *     MAC_PROTO_SYNC_FRAME = 93;
 *     MAC_PROTO_RTS_FRAME = 94;
 *     MAC_PROTO_CTS_FRAME = 95;
 *     MAC_PROTO_DS_FRAME = 96;
 *     MAC_PROTO_FRTS_FRAME = 97;
 * 
 *     MAC_802154_BEACON_FRAME = 1001;
 *     MAC_802154_ASSOCIATE_FRAME = 1002;
 *     MAC_802154_DATA_FRAME = 1003;
 *     MAC_802154_ACK_FRAME = 1004;
 *     MAC_802154_GTS_REQUEST_FRAME = 1005;
 * }
 * </pre>
 */
enum MAC_ProtocolFrameType {
    MAC_PROTO_DATA_FRAME = 2102,
    MAC_PROTO_BEACON_FRAME = 2103,
    MAC_PROTO_ACK_FRAME = 2104,
    MAC_PROTO_SYNC_FRAME = 93,
    MAC_PROTO_RTS_FRAME = 94,
    MAC_PROTO_CTS_FRAME = 95,
    MAC_PROTO_DS_FRAME = 96,
    MAC_PROTO_FRTS_FRAME = 97,
    MAC_802154_BEACON_FRAME = 1001,
    MAC_802154_ASSOCIATE_FRAME = 1002,
    MAC_802154_DATA_FRAME = 1003,
    MAC_802154_ACK_FRAME = 1004,
    MAC_802154_GTS_REQUEST_FRAME = 1005
};

/**
 * Struct generated from src/Node/Communication/MAC/Mac802154/MacGenericFrame.msg by opp_msgc.
 */
struct macHeaderInfo
{
    macHeaderInfo();
    int frameType;
    int srcID;
    int destID;
    int dataSequenceNumber;
    simtime_t NAV;
    simtime_t SYNC;
    int SYNC_ID;
    int SYNC_SN;
    int PANid;
    int beaconOrder;
    int frameOrder;
    int BSN;
    int CAPlength;
    int GTSlength;
};

void doPacking(cCommBuffer *b, macHeaderInfo& a);
void doUnpacking(cCommBuffer *b, macHeaderInfo& a);

/**
 * Struct generated from src/Node/Communication/MAC/Mac802154/MacGenericFrame.msg by opp_msgc.
 */
struct GTSspec
{
    GTSspec();
    int owner;
    int start;
    int length;
};

void doPacking(cCommBuffer *b, GTSspec& a);
void doUnpacking(cCommBuffer *b, GTSspec& a);

/**
 * Class generated from <tt>src/Node/Communication/MAC/Mac802154/MacGenericFrame.msg</tt> by opp_msgc.
 * <pre>
 * packet MAC_GenericFrame
 * {
 *     macHeaderInfo header;
 * 
 *     GTSspec GTSlist[]; 
 * 
 *     double rssi;
 * }
 * </pre>
 */
class MAC_GenericFrame : public cPacket
{
  protected:
    macHeaderInfo header_var;
    GTSspec *GTSlist_var; // array ptr
    unsigned int GTSlist_arraysize;
    double rssi_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MAC_GenericFrame&);

  public:
    MAC_GenericFrame(const char *name=NULL, int kind=0);
    MAC_GenericFrame(const MAC_GenericFrame& other);
    virtual ~MAC_GenericFrame();
    MAC_GenericFrame& operator=(const MAC_GenericFrame& other);
    virtual MAC_GenericFrame *dup() const {return new MAC_GenericFrame(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual macHeaderInfo& getHeader();
    virtual const macHeaderInfo& getHeader() const {return const_cast<MAC_GenericFrame*>(this)->getHeader();}
    virtual void setHeader(const macHeaderInfo& header_var);
    virtual void setGTSlistArraySize(unsigned int size);
    virtual unsigned int getGTSlistArraySize() const;
    virtual GTSspec& getGTSlist(unsigned int k);
    virtual const GTSspec& getGTSlist(unsigned int k) const {return const_cast<MAC_GenericFrame*>(this)->getGTSlist(k);}
    virtual void setGTSlist(unsigned int k, const GTSspec& GTSlist_var);
    virtual double getRssi() const;
    virtual void setRssi(double rssi_var);
};

inline void doPacking(cCommBuffer *b, MAC_GenericFrame& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, MAC_GenericFrame& obj) {obj.parsimUnpack(b);}


#endif // _MACGENERICFRAME_M_H_

# ********************************************************************************
# *  Copyright: National ICT Australia,  2007 - 2010                             *
# *  Developed at the ATP lab, Networked Systems research theme                  *
# *  Author(s): Athanassios Boulis, Dimosthenis Pediaditakis, Yuriy Tselishchev  *
# *  This file is distributed under the terms in the attached LICENSE file.      *
# *  If you do not find this file, copies can be found by writing to:            *
# *                                                                              *
# *      NICTA, Locked Bag 9013, Alexandria, NSW 1435, Australia                 *
# *      Attention:  License Inquiry.                                            *
# *                                                                              *
# *******************************************************************************/

[General]

# ==========================================================
# Always include the main Castalia.ini file
# ==========================================================

include ../Parameters/Castalia.ini
sim-time-limit = 1800s #s
SN.node[*].Communication.Routing.simTime = 1800 #s
SN.node[*].Communication.MAC.simTime = 1800 #s

SN.node[*].ResourceManager.sigmaCPUClockDrift = 0 # no clock drift

# ==========================================================
# deployment (range ca. 29 meters)
# ==========================================================



SN.node[*].Application.collectTraceInfo = false
SN.node[*].MobilityManager.collectTraceInfo = false
SN.node[*].Communication.Routing.collectTraceInfo = true
SN.node[*].Communication.Routing.collectReducedTraceInfo = true
SN.node[*].Communication.MAC.collectTraceInfo = true


SN.wirelessChannel.sigma = 4.0 #default = 4
SN.wirelessChannel.bidirectionalSigma = 1.0 #default = 1
SN.node[*].Communication.Radio.RadioParametersFile = "../Parameters/Radio/CC2420.txt"
SN.node[*].Communication.Radio.mode = "IDEAL"

# a popular MAC for WSN
SN.node[*].Communication.MACProtocolName = "TMAC"

# our own protocol: Pathless routing
SN.node[*].Communication.RoutingProtocolName = "PLR"

# Using simple aggregation application module with node 0 as a sink
SN.node[*].ApplicationName = "SimpleAggregation"
SN.node[0].Application.isSink = true
SN.node[*].Application.packetSize = 500
SN.node[*].Application.maxTTD = 100 #ms
SN.node[*].Application.sendInterval = 10000 #ms

SN.node[*].Communication.Routing.probeInterval = 120 #s 120
SN.node[*].Communication.Routing.cdfBroadcastInterval = 10 #s 10
SN.node[*].Communication.Routing.newRoundInterval = 120 #s 120
SN.node[*].Communication.Routing.pDFSlots = 100 #slots 100


# different packet sizes:
[Config packetSize_10]
SN.node[*].Application.packetSize = 10
[Config packetSize_20]
SN.node[*].Application.packetSize = 20
[Config packetSize_40]
SN.node[*].Application.packetSize = 40
[Config packetSize_80]
SN.node[*].Application.packetSize = 80
[Config packetSize_160]
SN.node[*].Application.packetSize = 160
[Config packetSize_320]
SN.node[*].Application.packetSize = 320


# different slot numbers:
[Config rts_cts_on]
SN.node[*].Communication.MAC.useRtsCts = true
[Config rts_cts_off]
SN.node[*].Communication.MAC.useRtsCts = false

# different maxTxRetries in MAC
[Config TxRetries__2]
SN.node[*].Communication.MAC.maxTxRetries = 2
[Config TxRetries__4]
SN.node[*].Communication.MAC.maxTxRetries = 4
[Config TxRetries__8]
SN.node[*].Communication.MAC.maxTxRetries = 8
[Config TxRetries__16]
SN.node[*].Communication.MAC.maxTxRetries = 16
[Config TxRetries__32]
SN.node[*].Communication.MAC.maxTxRetries = 32

# different slot numbers:
[Config slots__100]
SN.node[*].Communication.Routing.pDFSlots = 100
[Config slots__200]
SN.node[*].Communication.Routing.pDFSlots = 200
[Config slots__400]
SN.node[*].Communication.Routing.pDFSlots = 400
[Config slots__800]
SN.node[*].Communication.Routing.pDFSlots = 800
[Config slots__1600]
SN.node[*].Communication.Routing.pDFSlots = 1600

# different algorithms:
[Config Algo__Avg]
SN.node[*].Communication.Routing.useAverageDelay = true
SN.node[*].Communication.Routing.useAvgSecond = true
[Config Algo__PLR_Avg]
SN.node[*].Communication.Routing.useAverageDelay = false
SN.node[*].Communication.Routing.useAvgSecond = true
[Config Algo__PLR]
SN.node[*].Communication.Routing.useAverageDelay = false
SN.node[*].Communication.Routing.useAvgSecond = false

# different sent intervals:
[Config SendInterval__2500]
SN.node[*].Application.sendInterval = 2500 #ms
sim-time-limit = 3600s #s
SN.node[*].Communication.Routing.simTime = 3600 #s
SN.node[*].Communication.MAC.simTime = 3600 #s

[Config SendInterval__3535]
SN.node[*].Application.sendInterval = 3535 #ms
sim-time-limit = 3600s #s
SN.node[*].Communication.Routing.simTime = 3600 #s
SN.node[*].Communication.MAC.simTime = 3600 #s

[Config SendInterval__5000]
SN.node[*].Application.sendInterval = 5000 #ms
sim-time-limit = 3600s #s
SN.node[*].Communication.Routing.simTime = 3600 #s
SN.node[*].Communication.MAC.simTime = 3600 #s

[Config SendInterval__7071]
SN.node[*].Application.sendInterval = 7071 #ms
sim-time-limit = 3600s #s
SN.node[*].Communication.Routing.simTime = 3600 #s
SN.node[*].Communication.MAC.simTime = 3600 #s

[Config SendInterval__10000]
SN.node[*].Application.sendInterval = 10000 #ms
sim-time-limit = 3600s #s
SN.node[*].Communication.Routing.simTime = 3600 #s
SN.node[*].Communication.MAC.simTime = 3600 #s

[Config SendInterval__14142]
SN.node[*].Application.sendInterval = 14142 #ms
sim-time-limit = 3600s #s
SN.node[*].Communication.Routing.simTime = 3600 #s
SN.node[*].Communication.MAC.simTime = 3600 #s

[Config SendInterval__20000]
SN.node[*].Application.sendInterval = 20000 #ms
sim-time-limit = 3600s #s
SN.node[*].Communication.Routing.simTime = 3600 #s
SN.node[*].Communication.MAC.simTime = 3600 #s

[Config SendInterval__40000]
SN.node[*].Application.sendInterval = 40000 #ms
sim-time-limit = 3600s #s
SN.node[*].Communication.Routing.simTime = 3600 #s
SN.node[*].Communication.MAC.simTime = 3600 #s

[Config SendInterval__80000]
SN.node[*].Application.sendInterval = 80000 #ms
sim-time-limit = 7200s #s
SN.node[*].Communication.Routing.simTime = 7200 #s
SN.node[*].Communication.MAC.simTime = 7200 #s

[Config SendInterval__160000]
SN.node[*].Application.sendInterval = 160000 #ms
sim-time-limit = 14400s #s
SN.node[*].Communication.Routing.simTime = 14400 #s
SN.node[*].Communication.MAC.simTime = 14400 #s

[Config SendInterval__320000]
SN.node[*].Application.sendInterval = 320000 #ms
sim-time-limit = 28800s #s
SN.node[*].Communication.Routing.simTime = 28800 #s
SN.node[*].Communication.MAC.simTime = 28800 #s


# different maxTTDs:
[Config MaxTTD__12]
SN.node[*].Application.maxTTD = 12 #ms

[Config MaxTTD__17]
SN.node[*].Application.maxTTD = 17 #ms

[Config MaxTTD__25]
SN.node[*].Application.maxTTD = 25 #ms

[Config MaxTTD__35]
SN.node[*].Application.maxTTD = 35 #ms

[Config MaxTTD__50]
SN.node[*].Application.maxTTD = 50 #ms

[Config MaxTTD__70]
SN.node[*].Application.maxTTD = 70 #ms

[Config MaxTTD__100]
SN.node[*].Application.maxTTD = 100 #ms

[Config MaxTTD__141]
SN.node[*].Application.maxTTD = 141 #ms

[Config MaxTTD__200]
SN.node[*].Application.maxTTD = 200 #ms

[Config MaxTTD__283]
SN.node[*].Application.maxTTD = 283 #ms

[Config MaxTTD__400]
SN.node[*].Application.maxTTD = 400 #ms

[Config MaxTTD__565]
SN.node[*].Application.maxTTD = 565

[Config MaxTTD__800]
SN.node[*].Application.maxTTD = 800

[Config MaxTTD__1131]
SN.node[*].Application.maxTTD = 1131

[Config MaxTTD__1600]
SN.node[*].Application.maxTTD = 1600

[Config MaxTTD__10000]
SN.node[*].Application.maxTTD = 10000 #ms

[Config MaxTTD__100000]
SN.node[*].Application.maxTTD = 100000 #ms

[Config MaxTTD__1000000]
SN.node[*].Application.maxTTD = 1000000 #ms


# topologies:
# n_x_d_y_n_z, with
# x = number of nodes in [10,20,30,40,50,60,70,80,90,100], 
# y = densities in [10,12,14,16,18,20,30,40,50,60], 
# z = id in range [0,1,2,...,99]
include ../PLRConfig/topologies.ini


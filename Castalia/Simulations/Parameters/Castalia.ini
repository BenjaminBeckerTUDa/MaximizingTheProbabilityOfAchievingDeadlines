# ***************************************************************************************
# *  Copyright: National ICT Australia,  2007, 2008, 2009				*
# *  Developed at the Networks and Pervasive Computing program				*
# *  Author(s): Athanassios Boulis, Dimosthenis Pediaditakis, Yuriy Tselishchev		*
# *  This file is distributed under the terms in the attached LICENSE file.		*
# *  If you do not find this file, copies can be found by writing to:			*
# *											*
# *      NICTA, Locked Bag 9013, Alexandria, NSW 1435, Australia			*
# *      Attention:  License Inquiry.							*
# *											*
# **************************************************************************************/

[General]

# ===========================================================
# OMNet parameters related to cmd line execution 
# (reporting and progress monitoring)
# usually you will not need to change these parameters as Castalia
# uses its own reporting and debuging mechanisms
# ===========================================================

cmdenv-express-mode = true
cmdenv-module-messages = true
cmdenv-event-banners = false				
cmdenv-performance-display = false
cmdenv-interactive = true

# ===============================================================
# rest of the file defines general OMNeT parameters and the 
# Random Number Generators (RNGs) and output that Castalia is using 
# ===============================================================

ned-path = ../../src

network = SN  		# this line is for Cmdenv, Tkenv will still let you choose from a dialog

output-vector-file = Castalia-statistics.vec
output-scalar-file = Castalia-statistics.sca

num-rngs = 11	# 11 random number streams (or generators as OMNeT calls them)

seed-0-mt = 10	# the seeds for each of the RNGs
seed-1-mt = 20
seed-2-mt = 30
seed-3-mt = 40
seed-4-mt = 50
seed-5-mt = 60
seed-6-mt = 70
seed-7-mt = 80
seed-8-mt = 90
seed-9-mt = 100
seed-10-mt = 110

# ============================================================================
# associate the 10 RNGs streams with the various module RNGs. The first RNG (i.e, rng 0, 
# which has seed seed-0-mt) is used outside modules. Specifically it is used in the 
# SensorNetwork.ned file to produce the location of the nodes (in some cases that need
# randomness). The rest (numbers 1-10) are mapped for specific module usage.
# ============================================================================

SN.wirelessChannel.rng-0 = 1    		# used to produce the random shadowing effects
SN.wirelessChannel.rng-1 = 2    		# used to decide if a receiver, with X probability 
                                		# to receive a packet, will indeed receive it
SN.wirelessChannel.rng-2 = 9			# used in temporal model
                                    
SN.node[*].nodeApplication.rng-0	 = 3	# Randomizes the start time of the application
 
SN.node[*].networkInterface.MAC.rng-0	 = 4	# Produces values compared against txProb
SN.node[*].networkInterface.MAC.rng-1	 = 5	# Produces values between [0 ....  randomTxOffset]

SN.node[*].nodeResourceMgr.rng-0	 = 6	# Produces values of the clock drift of the CPU of each node
SN.node[*].nodeSensorDevMgr.rng-0	 = 7	# Produces values of the sensor devices' bias
SN.node[*].nodeSensorDevMgr.rng-1	 = 8	# Produces values of the sensor devices' noise

SN.physicalProcess[*].rng-0 		 = 10	# currently used only in CarsPhysicalProcess

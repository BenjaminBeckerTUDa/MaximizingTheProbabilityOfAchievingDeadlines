# ***************************************************************************************
# *  Copyright: National ICT Australia, 2007, 2008, 2009				*
# *  Developed at the Networks and Pervasive Computing program				*
# *  Author(s): Athanassios Boulis, Dimosthenis Pediaditakis, Yuriy Tselishchev         *
# *  This file is distributed under the terms in the attached LICENSE file.		*
# *  If you do not find this file, copies can be found by writing to:			*
# *											*
# *      NICTA, Locked Bag 9013, Alexandria, NSW 1435, Australia			*
# *      Attention:  License Inquiry.							*
# *											*
# **************************************************************************************/

[General]

SN.node[*].networkInterface.macModuleName = "TunableMacModule"

# ------ These are the parameters you usually tune  -----------------------------

SN.node[*].networkInterface.MAC.dutyCycle = 0.2			# listening / (sleeping+listening)
SN.node[*].networkInterface.MAC.listenInterval = 100		# ms, cannot be smaller than 0.5ms
SN.node[*].networkInterface.MAC.beaconIntervalFraction = 1  	# beacon_interval / sleeping_interval, if 0 no beacons are sent
SN.node[*].networkInterface.MAC.probTx = 1			# the probability of a single try of Transmission to happen
SN.node[*].networkInterface.MAC.numTx = 1			# when we have something to Tx, how many times we try
SN.node[*].networkInterface.MAC.randomTxOffset = 5		# ms, Tx after time chosen randomly from interval [0..randomTxOffset]
SN.node[*].networkInterface.MAC.reTxInterval = 40		# ms, Interval between retransmissions, (numTx-1) retransmissions
SN.node[*].networkInterface.MAC.backoffType = 2 		# 0-->(backoff = sleepinterval), 
								# 1-->(backoff = constant value), 
								# 2-->(backoff = multiplying value - e.g. 1*a, 2*a, 3*a, 4*a ...), 
								# 3-->(backoff = exponential value - e.g. 2, 4, 8, 16, 32...)

SN.node[*].networkInterface.MAC.backoffBaseValue = 20  		# in ms
SN.node[*].networkInterface.MAC.randomBackoff = true

# ------ These are the parameters you cusually tune -- END ---------------------------


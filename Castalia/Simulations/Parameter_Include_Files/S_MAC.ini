# ***************************************************************************************
# *  Copyright: National ICT Australia,  2009						*
# *  Developed at the Networks and Pervasive Computing program				*
# *  Author(s): Athanassios Boulis, Dimosthenis Pediaditakis				*
# *  This file is distributed under the terms in the attached LICENSE file.		*
# *  If you do not find this file, copies can be found by writing to:			*
# *											*
# *      NICTA, Locked Bag 9013, Alexandria, NSW 1435, Australia			*
# *      Attention:  License Inquiry.							*
# *											*
# **************************************************************************************/



# -----------------------------------------------------------------
# -- SIMPLE SUB-MODULE of networkInterface: networkInterface.MAC --
# -----------------------------------------------------------------

# first define which module implementation you are using  
# (different MACs may have different parameters)
SN.node[*].networkInterface.macModuleName = "TMacModule"


SN.node[*].networkInterface.MAC.printDebugInfo = true
# if printDebugInfo is false then potentiallyDroppedPacketsStatistics and StateTransitions will not be written at the Castalia-Debug output
SN.node[*].networkInterface.MAC.printPotentiallyDroppedPacketsStatistics = true	#if true, it prints an overall analysis of the dropped packets at MAC upon Rx
SN.node[*].networkInterface.MAC.printStateTransitions = true		#if true, it prints the transitions of the MAC between it states (Default, Tx, Carrier Sensing, Expecting Rx)



# MAC_GenericFrame has the following real-world 
# (non-simulation-specific) fields:
#	struct macHeaderInfo header; ----------> 14bytes
#	struct estim consists of:
#		int frameType enum(MAC_ProtocolFrameType); ---> 2bytes
#		int srcID;  --------------> 4bytes
#		int destID; --------------> 4bytes
#		int dataSequenceNumber; --> 4bytes
# MAC header overhead: Total bytes = 4*3 + 2 = 14 (|*|)

SN.node[*].networkInterface.MAC.maxMACFrameSize = 100	# bytes
SN.node[*].networkInterface.MAC.macFrameOverhead = 14	# bytes
SN.node[*].networkInterface.MAC.ackFrameSize = 14	# bytes
SN.node[*].networkInterface.MAC.syncFrameSize = 22	# bytes
SN.node[*].networkInterface.MAC.rtsFrameSize = 14	# bytes
SN.node[*].networkInterface.MAC.ctsFrameSize = 14	# bytes

SN.node[*].networkInterface.MAC.macBufferSize = 32	# number of maximum frames held from the upper layer 
SN.node[*].networkInterface.MAC.maxTxRetries = 2	# number of transmission attempts per packet

SN.node[*].networkInterface.MAC.resyncTime = 40		#seconds
SN.node[*].networkInterface.MAC.allowSinkSync = 1	#bool
SN.node[*].networkInterface.MAC.contentionPeriod = 10	#mseconds
SN.node[*].networkInterface.MAC.listenTimeout = 61	#mseconds
SN.node[*].networkInterface.MAC.waitTimeout = 5		#mseconds
SN.node[*].networkInterface.MAC.useFrts = 0		#boolean, not supported
SN.node[*].networkInterface.MAC.useRtsCts = 1		#boolean
SN.node[*].networkInterface.MAC.disableTAextension = 1	#boolean
SN.node[*].networkInterface.MAC.frameTime = 610		#mseconds



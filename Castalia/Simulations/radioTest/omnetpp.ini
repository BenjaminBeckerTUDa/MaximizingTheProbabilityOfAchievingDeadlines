# ***************************************************************************************
# *  Copyright: National ICT Australia, 2009						*
# *  Developed at the Networks and Pervasive Computing program				*
# *  Author(s): Yuriy Tselishchev							*
# *  This file is distributed under the terms in the attached LICENSE file.		*
# *  If you do not find this file, copies can be found by writing to:			*
# *											*
# *      NICTA, Locked Bag 9013, Alexandria, NSW 1435, Australia			*
# *      Attention:  License Inquiry.							*
# *											*
# **************************************************************************************/

[General]

# ==========================================================
# Always include the main Castalia.ini file
# ==========================================================

include ../Parameters/Castalia.ini

sim-time-limit = 100s

SN.field_x = 200					# meters
SN.field_y = 200					# meters
SN.field_z = 0 

# These tests include 3 nodes each, coordinates will be specified manually
SN.numNodes = 3
SN.deploymentType = 4

# important wireless channel switch to allow mobility
SN.wirelessChannel.onlyStaticNodes = false
SN.wirelessChannel.sigma = 0
SN.wirelessChannel.bidirectionalSigma = 0

# These tests use big packets (2kb) to show interference
# This requires to modify parameters of all communication layers
SN.node[*].networkInterface.Network.maxNetFrameSize = 2500
SN.node[*].networkInterface.MAC.maxMACFrameSize = 2500
SN.node[*].networkInterface.Radio.maxPhyFrameSize = 2500

# Throughput test application is used to send packets to node 0
# 5 packets per second will be send, each packet carrying 2000 bytes
# payload. printDebugInfo is enabled to show when each
# packet reaches node 0
SN.node[*].appModuleName = "throughputTest_ApplicationModule"
SN.node[*].nodeApplication.packet_rate = 5
SN.node[*].nodeApplication.constantDataPayload = 2000
# application's trace info for node 0 (receiving node in all configurations)
# is turned on, to show some interesting patterns
SN.node[0].nodeApplication.collectTraceInfo = true


# Low power level is used to allow node's mobility to
# have better effect on connectivity
SN.node[*].networkInterface.Radio.RadioParametersFile = "../Parameters/Radio/CC2420.txt"
SN.node[*].networkInterface.Radio.TxOutputPower = "-5dBm"

# ==========================================================
# The default configuration sets node 0 to be mobile, while 
# sending nodes 1 and 2 are static. Receiving node 0 will 
# move in diagonal pattern, allowing it to receive packets 
# from node 1 and some time later from node 2. This will be
# clearly seen on the trace file and the collected output.
# ==========================================================

SN.node[0].xCoor = 0
SN.node[0].yCoor = 0
SN.node[0].zCoor = 0
SN.node[1].xCoor = 50
SN.node[1].yCoor = 50
SN.node[1].zCoor = 0
SN.node[2].xCoor = 150
SN.node[2].yCoor = 150
SN.node[2].zCoor = 0

SN.node[0].mobilityModuleName = "LineMobilityModule"

SN.node[0].nodeMobilityModule.updateInterval = 100
SN.node[0].nodeMobilityModule.xCoorDestination = 200
SN.node[0].nodeMobilityModule.yCoorDestination = 200
SN.node[0].nodeMobilityModule.zCoorDestination = 0
SN.node[0].nodeMobilityModule.speed = 15


# ==========================================================
# InterferenceTest1 shows how communication link between
# static nodes 0 and 1 is disrupted when mobile node 2
# passes between them.
# ==========================================================

[Config InterferenceTest1]

SN.node[0].mobilityModuleName = "NoMobilityModule"
SN.node[1].mobilityModuleName = "NoMobilityModule"
SN.node[2].mobilityModuleName = "LineMobilityModule"

SN.node[0].xCoor = 10
SN.node[0].yCoor = 50
SN.node[0].zCoor = 0

SN.node[1].xCoor = 0
SN.node[1].yCoor = 50
SN.node[1].zCoor = 0

SN.node[2].xCoor = 5
SN.node[2].yCoor = 0
SN.node[2].zCoor = 0

SN.node[2].nodeMobilityModule.updateInterval = 100
SN.node[2].nodeMobilityModule.xCoorDestination = 5
SN.node[2].nodeMobilityModule.yCoorDestination = 100
SN.node[2].nodeMobilityModule.zCoorDestination = 0
SN.node[2].nodeMobilityModule.speed = 5


# ==========================================================
# InterferenceTest2 is similar to InterferenceTest1, but
# this time node 2 approaches much closer to receiving node 0
# while node 1 is located further away. While node 1 is still 
# able to reach node 0 most of the time, when node 2 moves
# very close to the reciever, it's transmissions become stronger
# and node 0 is able to receive packets from node 2 in spite
# of the fact that node 1 is still transmitting
# ==========================================================

[Config InterferenceTest2]

SN.node[0].mobilityModuleName = "NoMobilityModule"
SN.node[1].mobilityModuleName = "NoMobilityModule"
SN.node[2].mobilityModuleName = "LineMobilityModule"

SN.node[0].xCoor = 15
SN.node[0].yCoor = 50
SN.node[0].zCoor = 0

SN.node[1].xCoor = 0
SN.node[1].yCoor = 50
SN.node[1].zCoor = 0

SN.node[2].xCoor = 22
SN.node[2].yCoor = 0
SN.node[2].zCoor = 0

SN.node[2].nodeMobilityModule.updateInterval = 100
SN.node[2].nodeMobilityModule.xCoorDestination = 22
SN.node[2].nodeMobilityModule.yCoorDestination = 100
SN.node[2].nodeMobilityModule.zCoorDestination = 0
SN.node[2].nodeMobilityModule.speed = 5


# ==========================================================
# The final cofiguration tests the CSInterrupt feature
# of the radio, as well as reads the RSSI value.
# We are noticing the trace output at the application to
# see when packets are Txed if they are Rxed and if there
# is a Carrier Sense interrupt for different values of
# TX power and CCA threshold. Just two static nodes.
# ==========================================================
[Config CSinterruptTest]

sim-time-limit = 1s

SN.node[*].networkInterface.Radio.carrierSenseInterruptEnabled = true

SN.numNodes = 2

SN.wirelessChannel.onlyStaticNodes = true
SN.node[0].mobilityModuleName = "NoMobilityModule"
SN.node[1].mobilityModuleName = "NoMobilityModule"

SN.node[0].xCoor = 10
SN.node[0].yCoor = 50
SN.node[0].zCoor = 0

SN.node[1].xCoor = 0
SN.node[1].yCoor = 50
SN.node[1].zCoor = 0

SN.node[*].nodeApplication.constantDataPayload = 200

SN.node[1].networkInterface.Radio.TxOutputPower = ${TxPower="-5dBm", "-10dBm", "-15dBm"}
SN.node[0].networkInterface.Radio.CCAthreshold = ${CCAthreshold=-95, -90, -85}


[Config varyInterferenceModel]
SN.node[*].networkInterface.Radio.collisionModel = ${InterfModel=0,1,2}
